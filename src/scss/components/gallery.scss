// ========== Grid Parent =======
.gallery {
    @media screen and (min-width: $medium) {
      display: grid;
      grid-template-columns: repeat(2, minmax(auto, 1fr));
      grid-gap: 30px;
      align-items: center;
    }
    @media screen and (min-width: $large) {
      grid-template-columns: repeat(3, minmax(auto, 1fr));
    }
    @media screen and (min-width: $full) {
      grid-template-columns: repeat(4, minmax(auto, 1fr));
      grid-template-rows: repeat(auto, minmax(auto, 1fr));
    }
}

// ========== Grid Item ========
.gallery-item {
    @media screen and (max-width: 767px) {
      &:not(:last-child) {
        margin-bottom: 20px;
      }
    }
    position: relative;
    align-self: center;
    overflow: hidden;
    box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.8),
        0px 3px 3px 1px rgba(0, 0, 0, 0.12), 
        0px 4px 4px 0px rgba(0, 0, 0, 0.16);
    transition: transform $animation-long $animation-timing,
    box-shadow $animation-long $animation-timing;
    
    &:hover,
    &:focus {
      box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.7), 
        0px 4px 4px 0px rgba(0, 0, 0, 0.12),
        1px 4px 6px 0px rgba(0, 0, 0, 0.16);
      transform: scale(1.05);
      cursor: zoom-in;
    }
}

.gallery-item__container {
    background-size: contain;
}
  
.gallery-item__img {
  display: block;
  width: 100%;
  object-fit: cover;
  transition: transform $animation-long $animation-timing;
}

.gallery-stats {
    position: absolute;
    bottom: 0;
    left: 0;
    display: flex;
    flex-direction: row;
    align-items: baseline;
    justify-content: space-evenly;
    text-align: center;
    width: 100%;
    height: 25%;
    padding: 5px 10px;
    margin: 0 auto;
    opacity: 0;
    background-color:rgba(0, 0, 0, 0);
  transform: translateX(-20em);
  transition: transform 700ms $animation-timing,
  opacity 700ms $animation-timing,
  background-color 700ms $animation-timing;

  will-change: opacity, transform, background-color;
    
  .gallery-item:hover &,
  .gallery-item:focus & {
    background-color: rgba(0, 0, 0, 0.65);
    cursor: pointer;
    opacity: 1;
    transform: translateX(0);
  }
}

.gallery-item__stats {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: $icon-color;
  font-size: 11px;
  font-family: $fourth-font;
  font-weight: normal;
  
  @media screen and (min-width: $medium) {
    font-size: 14px;
    font-weight: bold;
  }
}

.stats-icon {
  // width: 20px;
  color: $icon-color;
  opacity: 0;
  transition: color $animation-long $animation-timing,
  opacity $animation-long $animation-timing;

  .gallery-item:hover &,
  .gallery-item:focus & {
    opacity: 1;
    color: $accent-color;
  }
}

.stats-value {
  color: $icon-color;
  opacity: 0;
  transition: color $animation-long $animation-timing,
  opacity $animation-long $animation-timing;  

  .gallery-item:hover &,
  .gallery-item:focus & {
    opacity: 1;
    color: $secondary-accent-color;
  }
}

.loader {
  margin: auto;
  border: 6px solid #f3f3f3;
  border-top: 6px solid #4ae40d;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 2s $animation-timing infinite;

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
  
.hide-loader {
  display: none;
}
  
.scroll-up {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 60px;
  height: 60px;
  padding: 0;

  font-weight: bold;
  cursor: pointer;
  color: $accent-color;
  background-color: transparent;
  border-radius: 50%;
  border-style: none;
  outline-style: none;
  opacity: 0;
  z-index: 60;
  transition: background-color $animation-duration $animation-timing;

  &:hover,
  &:focus {
    background-color: $secondary-accent-color;
  }
}
    
.scroll-svg {
  margin: auto;
  width: 60px;
  height: 60px;
  fill: $accent-color;
  transition: fill $animation-duration $animation-timing;

  &:hover,
  &:focus {
    fill: $accent-third;
  }
}